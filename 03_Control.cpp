/*

 Description:
 Control
 
 Modifications:
 ---------------------------------------------------------------------------------------
 Date      Vers.  Comment                                                     Name
 ---------------------------------------------------------------------------------------
 01.10.11  01.00  Created												      Siddiqui
 30.10.23  02.00  Updated                                                     Siddiqui
 ---------------------------------------------------------------------------------------

*/
#include <functional>
#include <iostream>
#include <array>
#include <vector>
using namespace std;

//----------------------------------------------------------------
int main() {

    // ==========================================================================================================
    // Notes
    // ==========================================================================================================
    // - continue:    Skip current iteration
    // - break:       Skip all iterations (exit the loop)

    int max_count       = 10;
    vector vec   = {1, 2, 3};

    // ==========================================================================================================
    // If Else
    // ==========================================================================================================
    if (max_count < 10) {
    } else if (max_count == 10) {
    } else {
    }

    // ==========================================================================================================
    // Binary and Ternary Operators
    // ==========================================================================================================
    (max_count < 10) && (vec.at(0) = 1);
    (max_count < 10) ? (vec.at(0) = 1) : (vec.at(1) = 2);

    // ==========================================================================================================
    // Switch Operators
    // ==========================================================================================================
    switch (max_count) {
        case 0:
            cout << 0;
            break;
        case 1:
        case 2:
            cout << 1;
            break;
        default:
            cout << "default";
            break;
    }

    // ==========================================================================================================
    // For
    // ==========================================================================================================
    for (auto counter = 0; counter < max_count; counter += 1) {
        cout << counter;
    }

    // ==========================================================================================================
    // For Range - Recommended
    // ==========================================================================================================
    // By value
    for (auto element : vec) {
        cout << element;
    }
    // By address
    for (auto &element : vec) {
        cout << element;
    }
    // By address (constant)
    for (const auto &element : vec) {
        cout << element;
    }
    
    // ==========================================================================================================
    // For Each
    // ==========================================================================================================
    // Lambdas are used here for inline function definition
    for_each(vec.begin(), vec.end(), [](const auto &element) {
        cout << element << endl;
    });

    // ==========================================================================================================
    // Iterator
    // ==========================================================================================================
    for (auto itr = vec.begin(); itr < vec.end(); itr += 1) {
        cout << *itr << endl;
    }

    // ==========================================================================================================
    // While
    // ==========================================================================================================
    auto counter = 0;
    while (counter < max_count) {
        counter += 1;
    }
    
    return 0;

}